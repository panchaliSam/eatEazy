generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cartitems {
  CartItemsID Int   @id @default(autoincrement())
  CartID      Int
  MenuItemID  Int
  Quantity    Int?  @default(1)
  Price       Float @db.Float
  carts       carts @relation(fields: [CartID], references: [CartID], onUpdate: Restrict, map: "FK_CartItems_CartID")

  @@index([CartID], map: "FK_CartItems_CartID")
}

model carts {
  CartID       Int           @id @default(autoincrement())
  UserID       Int
  RestaurantID Int
  Status       carts_Status? @default(ACTIVE)
  CreatedAt    DateTime      @default(now()) @db.DateTime(0)
  UpdatedAt    DateTime      @default(now()) @db.DateTime(0)
  cartitems    cartitems[]
}

model orderitems {
  OrderItemsID Int    @id @default(autoincrement())
  OrderID      Int
  MenuItemID   Int
  Quantity     Int
  Price        Float  @db.Float
  orders       orders @relation(fields: [OrderID], references: [OrderID], onUpdate: Restrict, map: "FK_OrderItems_OrderID")

  @@index([OrderID], map: "FK_OrderItems_OrderID")
}

model orders {
  OrderID      Int            @id @default(autoincrement())
  UserID       Int
  RestaurantID Int
  CartID       Int
  TotalAmount  Float          @db.Float
  Status       orders_Status? @default(PENDING)
  CreatedAt    DateTime       @default(now()) @db.DateTime(0)
  UpdatedAt    DateTime       @default(now()) @db.DateTime(0)
  orderitems   orderitems[]
}

enum carts_Status {
  ACTIVE
  COMPLETED
}

enum orders_Status {
  PENDING
  CONFIRMED
  PREPARING
  READY_FOR_PICKUP
  CANCELLED
}
